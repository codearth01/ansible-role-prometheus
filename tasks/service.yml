---
- name: Check for init.d service
  set_fact:
    is_service: yes
  when: not is_service and (ansible_distribution == "Ubuntu" and ansible_distribution_major_version == "14")

- name: Check for systemd service
  set_fact:
    is_systemd: yes
  when: not is_systemd and (ansible_os_family  == "RedHat" and ansible_distribution_major_version >= "7") or (ansible_distribution == "Ubuntu" and ansible_distribution_major_version >= "16") or (ansible_distribution == "Debian" and ansible_distribution_major_version >= "8")

- block:
  - block:
    - name: Create prometheus sysv init script (Ubuntu 14.04)
      template:
        src: prometheus.init.j2
        dest: "/etc/init.d/{{ prometheus_service_name }}"
        owner: root
        group: root
        mode: 0755
      notify:
        - restart prometheus

    - name: Enable prometheus service
      service:
        name: "{{ prometheus_service_name }}"
        enabled: yes
        state: started
    when: is_service

  - block:
    - name: Create prometheus systemd service
      template:
        src: prometheus.service.j2
        dest: "{{ systemd_service_dir }}/{{ prometheus_service_name }}.service"
        owner: root
        group: root
        mode: 0755
      notify:
        - restart prometheus

    - name: Enable prometheus systemd service
      systemd:
        name: "{{ prometheus_service_name }}"
        enabled: yes
        daemon-reload: yes
        state: started
    when: is_systemd
  when: is_prometheus

- block:
  - block:
    - name: Create alertmanager sysv init script (Ubuntu 14.04)
      template:
        src: alertmanager.init.j2
        dest: "/etc/init.d/{{ alertmanager_service_name }}"
        owner: root
        group: root
        mode: 0755
      notify:
        - restart alertmanager

    - name: Enable alertmanager service
      service:
        name: "{{ alertmanager_service_name }}"
        enabled: yes
        state: started
    when: is_service

  - block:
    - name: Create alertmanager systemd service
      template:
        src: alertmanager.service.j2
        dest: "{{ systemd_service_dir }}/{{ alertmanager_service_name }}.service"
        owner: root
        group: root
        mode: 0755
      notify:
        - restart alertmanager

    - name: Enable alertmanager systemd service
      systemd:
        name: "{{ alertmanager_service_name }}"
        enabled: yes
        daemon-reload: yes
        state: started
    when: is_systemd
  when: is_alertmanager

- block:
  - block:
    - name: Create pushgateway sysv init script (Ubuntu 14.04)
      template:
        src: pushgateway.init.j2
        dest: "/etc/init.d/{{ pushgateway_service_name }}"
        owner: root
        group: root
        mode: 0755
      notify:
        - restart pushgateway

    - name: Enable pushgateway service
      service:
        name: "{{ pushgateway_service_name }}"
        enabled: yes
        state: started
    when: is_service

  - block:
    - name: Create pushgateway systemd service
      template:
        src: pushgateway.service.j2
        dest: "{{ systemd_service_dir }}/{{ pushgateway_service_name }}.service"
        owner: root
        group: root
        mode: 0755
      notify:
        - restart pushgateway

    - name: Enable pushgateway systemd service
      systemd:
        name: "{{ pushgateway_service_name }}"
        enabled: yes
        daemon-reload: yes
        state: started
    when: is_systemd
  when: is_pushgateway

- block:
  - block:
    - name: Create node_exporter sysv init script (Ubuntu 14.04)
      template:
        src: node_exporter.init.j2
        dest: "/etc/init.d/{{ node_exporter_service_name }}"
        owner: root
        group: root
        mode: 0755
      notify:
        - restart node_exporter

    - name: Enable node_exporter service
      service:
        name: "{{ node_exporter_service_name }}"
        enabled: yes
        state: started
    when: is_service

  - block:
    - name: Create node_exporter systemd service
      template:
        src: node_exporter.service.j2
        dest: "{{ systemd_service_dir }}/{{ node_exporter_service_name }}.service"
        owner: root
        group: root
        mode: 0755
      notify:
        - restart node_exporter

    - name: Enable node_exporter systemd service
      systemd:
        name: "{{ node_exporter_service_name }}"
        enabled: yes
        daemon-reload: yes
        state: started
    when: is_systemd
  when: is_node_exporter

- block:
  - block:
    - name: Create blackbox_exporter sysv init script (Ubuntu 14.04)
      template:
        src: blackbox_exporter.init.j2
        dest: "/etc/init.d/{{ blackbox_exporter_service_name }}"
        owner: root
        group: root
        mode: 0755
      notify:
        - restart blackbox_exporter

    - name: Enable blackbox_exporter service
      service:
        name: "{{ blackbox_exporter_service_name }}"
        enabled: yes
        state: started
    when: is_service

  - block:
    - name: Create blackbox_exporter systemd service
      template:
        src: blackbox_exporter.service.j2
        dest: "{{ systemd_service_dir }}/{{ blackbox_exporter_service_name }}.service"
        owner: root
        group: root
        mode: 0755
      notify:
        - restart blackbox_exporter

    - name: Enable blackbox_exporter systemd service
      systemd:
        name: "{{ blackbox_exporter_service_name }}"
        enabled: yes
        daemon-reload: yes
        state: started
    when: is_systemd
  when: is_blackbox_exporter

- block:
  - block:
    - name: Create solr_exporter sysv init script (Ubuntu 14.04)
      template:
        src: solr_exporter.init.j2
        dest: "/etc/init.d/{{ solr_exporter_service_name }}"
        owner: root
        group: root
        mode: 0755
      notify:
        - restart solr_exporter

    - name: Enable solr_exporter service
      service:
        name: "{{ solr_exporter_service_name }}"
        enabled: yes
        state: started
    when: is_service

  - block:
    - name: Create solr_exporter systemd service
      template:
        src: solr_exporter.service.j2
        dest: "{{ systemd_service_dir }}/{{ solr_exporter_service_name }}.service"
        owner: root
        group: root
        mode: 0755
      notify:
        - restart solr_exporter

    - name: Enable solr_exporter systemd service
      systemd:
        name: "{{ solr_exporter_service_name }}"
        enabled: yes
        daemon-reload: yes
        state: started
    when: is_systemd
  when: is_solr_exporter